{"ast":null,"code":"import { MongoClient } from 'mongodb';\n\nasync function handler(req, res) {\n  const eventId = req.query.eventId;\n  const client = await MongoClient.connect('mongodb+srv://admin-user:C123456@cluster0.ftu9f.mongodb.net/events?retryWrites=true&w=majority');\n\n  if (req.method === 'POST') {\n    const {\n      email,\n      name,\n      text\n    } = req.body; //add server side validation\n\n    if (!email.includes('@') || !name || name.trim() === '' || !text || text.trim() === '') {\n      res.status(422).json({\n        message: 'Invalid Input.'\n      });\n      return;\n    }\n\n    console.log(email, name, text);\n    const newComment = {\n      id: new Date().toISOString(),\n      email,\n      name,\n      text,\n      eventId\n    };\n    const db = client.db();\n    const result = await db.collection('comments').insertOne(newComment);\n    console.log(result);\n    res.status(201).json({\n      message: 'Added comment.',\n      comment: newComment\n    });\n  }\n\n  if (req.method === 'GET') {\n    const dummyList = [{\n      id: 'c1',\n      name: 'Elton',\n      text: 'first comment.'\n    }, {\n      id: 'c2',\n      name: 'EltonC',\n      text: 'second comment.'\n    }];\n    res.status(200).json({\n      comments: dummyList\n    });\n  }\n\n  client.close();\n}\n\nexport default handler;","map":{"version":3,"sources":["D:/Projects/learn-nextjs/events-api-app/pages/api/comments/[eventId].js"],"names":["MongoClient","handler","req","res","eventId","query","client","connect","method","email","name","text","body","includes","trim","status","json","message","console","log","newComment","id","Date","toISOString","db","result","collection","insertOne","comment","dummyList","comments","close"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,SAA1B;;AAEA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAgC;AAG5B,QAAMC,OAAO,GAAGF,GAAG,CAACG,KAAJ,CAAUD,OAA1B;AACA,QAAME,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CAAoB,gGAApB,CAArB;;AAGA,MAAGL,GAAG,CAACM,MAAJ,KAAa,MAAhB,EAAuB;AACnB,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA,IAAR;AAAcC,MAAAA;AAAd,QAAsBT,GAAG,CAACU,IAAhC,CADmB,CAEnB;;AACA,QAAG,CAACH,KAAK,CAACI,QAAN,CAAe,GAAf,CAAD,IACA,CAACH,IADD,IACSA,IAAI,CAACI,IAAL,OAAc,EADvB,IAED,CAACH,IAFA,IAEMA,IAAI,CAACG,IAAL,OAAc,EAFvB,EAE0B;AACtBX,MAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,QAAAA,OAAO,EAAC;AAAT,OAArB;AACA;AACH;;AAEDC,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ,EAAmBC,IAAnB,EAAyBC,IAAzB;AACA,UAAMS,UAAU,GAAG;AACfC,MAAAA,EAAE,EAAC,IAAIC,IAAJ,GAAWC,WAAX,EADY;AAEfd,MAAAA,KAFe;AAGfC,MAAAA,IAHe;AAIfC,MAAAA,IAJe;AAKfP,MAAAA;AALe,KAAnB;AAQA,UAAMoB,EAAE,GAAGlB,MAAM,CAACkB,EAAP,EAAX;AACA,UAAMC,MAAM,GAAG,MAAMD,EAAE,CAACE,UAAH,CAAc,UAAd,EAA0BC,SAA1B,CAAoCP,UAApC,CAArB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYM,MAAZ;AACAtB,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,MAAAA,OAAO,EAAC,gBAAT;AAA0BW,MAAAA,OAAO,EAACR;AAAlC,KAArB;AACH;;AAED,MAAGlB,GAAG,CAACM,MAAJ,KAAa,KAAhB,EAAsB;AAClB,UAAMqB,SAAS,GAAG,CACd;AAACR,MAAAA,EAAE,EAAC,IAAJ;AAAUX,MAAAA,IAAI,EAAC,OAAf;AAAwBC,MAAAA,IAAI,EAAC;AAA7B,KADc,EAEd;AAACU,MAAAA,EAAE,EAAC,IAAJ;AAAUX,MAAAA,IAAI,EAAC,QAAf;AAAyBC,MAAAA,IAAI,EAAC;AAA9B,KAFc,CAAlB;AAIAR,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACc,MAAAA,QAAQ,EAACD;AAAV,KAArB;AACH;;AAEDvB,EAAAA,MAAM,CAACyB,KAAP;AACH;;AAED,eAAe9B,OAAf","sourcesContent":["import {MongoClient} from 'mongodb';\r\n\r\nasync function handler(req, res){\r\n\r\n\r\n    const eventId = req.query.eventId;\r\n    const client = await MongoClient.connect('mongodb+srv://admin-user:C123456@cluster0.ftu9f.mongodb.net/events?retryWrites=true&w=majority'\r\n        );\r\n\r\n    if(req.method==='POST'){\r\n        const {email, name, text} = req.body;\r\n        //add server side validation\r\n        if(!email.includes('@')\r\n        || !name || name.trim()===''\r\n        ||!text||text.trim()===''){\r\n            res.status(422).json({message:'Invalid Input.'});\r\n            return;\r\n        }\r\n\r\n        console.log(email, name, text);\r\n        const newComment = {\r\n            id:new Date().toISOString(),\r\n            email,\r\n            name,\r\n            text,\r\n            eventId\r\n        }\r\n        \r\n        const db = client.db();\r\n        const result = await db.collection('comments').insertOne(newComment);\r\n        console.log(result);\r\n        res.status(201).json({message:'Added comment.',comment:newComment});\r\n    }\r\n\r\n    if(req.method==='GET'){\r\n        const dummyList = [\r\n            {id:'c1', name:'Elton', text:'first comment.'},\r\n            {id:'c2', name:'EltonC', text:'second comment.'}\r\n        ];\r\n        res.status(200).json({comments:dummyList});\r\n    }\r\n\r\n    client.close();\r\n}\r\n\r\nexport default handler;"]},"metadata":{},"sourceType":"module"}