{"ast":null,"code":"import { MongoClient } from 'mongodb';\n\nasync function connectDatabase() {\n  const client = await MongoClient.connect('mongodb+srv://admin-user:C123456@cluster0.ftu9f.mongodb.net/events?retryWrites=true&w=majority');\n  return client;\n}\n\nasync function insertDocument(client, document) {\n  const db = client.db();\n  await db.collection('emails').insertOne(document);\n}\n\nasync function handler(req, res) {\n  if (req.method === 'POST') {\n    const userEmail = req.body.email;\n\n    if (!userEmail || !userEmail.includes('@')) {\n      res.status(422).json({\n        message: 'Invalid email address.'\n      });\n      return;\n    }\n\n    let client;\n\n    try {\n      client = await connectDatabase();\n    } catch (error) {\n      res.status(500).json({\n        message: 'Connecting to the database failed!'\n      });\n      return;\n    }\n\n    try {\n      await insertDocument(client, {\n        email: userEmail\n      });\n      client.close();\n    } catch (error) {\n      res.status(500).json({\n        message: 'inserting data failed'\n      });\n      return;\n    }\n\n    res.status(201).json({\n      message: 'Signed up!'\n    });\n  }\n}\n\n;\nexport default handler;","map":{"version":3,"sources":["D:/Projects/learn-nextjs/events-api-app/pages/api/newsletter.js"],"names":["MongoClient","connectDatabase","client","connect","insertDocument","document","db","collection","insertOne","handler","req","res","method","userEmail","body","email","includes","status","json","message","error","close"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,SAA1B;;AAEA,eAAeC,eAAf,GAAgC;AAC5B,QAAMC,MAAM,GAAG,MAAMF,WAAW,CAACG,OAAZ,CACjB,gGADiB,CAArB;AAGA,SAAOD,MAAP;AACH;;AAED,eAAeE,cAAf,CAA8BF,MAA9B,EAAsCG,QAAtC,EAA+C;AAC3C,QAAMC,EAAE,GAAGJ,MAAM,CAACI,EAAP,EAAX;AACA,QAAMA,EAAE,CAACC,UAAH,CAAc,QAAd,EAAwBC,SAAxB,CAAkCH,QAAlC,CAAN;AACH;;AAGD,eAAeI,OAAf,CAAuBC,GAAvB,EAA2BC,GAA3B,EAA+B;AAC3B,MAAGD,GAAG,CAACE,MAAJ,KAAa,MAAhB,EAAuB;AACnB,UAAMC,SAAS,GAAGH,GAAG,CAACI,IAAJ,CAASC,KAA3B;;AAEA,QAAG,CAACF,SAAD,IAAY,CAACA,SAAS,CAACG,QAAV,CAAmB,GAAnB,CAAhB,EAAwC;AACpCL,MAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,QAAAA,OAAO,EAAC;AAAT,OAArB;AACA;AACH;;AAED,QAAIjB,MAAJ;;AACA,QAAG;AACCA,MAAAA,MAAM,GAAG,MAAMD,eAAe,EAA9B;AACH,KAFD,CAEC,OAAMmB,KAAN,EAAY;AACTT,MAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,QAAAA,OAAO,EAAC;AAAT,OAArB;AACA;AACH;;AAED,QAAG;AACC,YAAMf,cAAc,CAACF,MAAD,EAAS;AAACa,QAAAA,KAAK,EAACF;AAAP,OAAT,CAApB;AACAX,MAAAA,MAAM,CAACmB,KAAP;AACH,KAHD,CAGC,OAAMD,KAAN,EAAY;AACTT,MAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,QAAAA,OAAO,EAAC;AAAT,OAArB;AACA;AAEH;;AAEDR,IAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,MAAAA,OAAO,EAAC;AAAT,KAArB;AAEH;AACJ;;AAAA;AAED,eAAeV,OAAf","sourcesContent":["import {MongoClient} from 'mongodb';\r\n\r\nasync function connectDatabase(){\r\n    const client = await MongoClient.connect(\r\n        'mongodb+srv://admin-user:C123456@cluster0.ftu9f.mongodb.net/events?retryWrites=true&w=majority'\r\n        );\r\n    return client;\r\n}\r\n\r\nasync function insertDocument(client, document){\r\n    const db = client.db();\r\n    await db.collection('emails').insertOne(document);\r\n}\r\n\r\n\r\nasync function handler(req,res){\r\n    if(req.method==='POST'){\r\n        const userEmail = req.body.email;\r\n\r\n        if(!userEmail||!userEmail.includes('@')){\r\n            res.status(422).json({message:'Invalid email address.'});\r\n            return;\r\n        }\r\n\r\n        let client;\r\n        try{\r\n            client = await connectDatabase();\r\n        }catch(error){\r\n            res.status(500).json({message:'Connecting to the database failed!'});\r\n            return;\r\n        }\r\n\r\n        try{\r\n            await insertDocument(client, {email:userEmail})\r\n            client.close();\r\n        }catch(error){\r\n            res.status(500).json({message:'inserting data failed'});\r\n            return;\r\n\r\n        }\r\n        \r\n        res.status(201).json({message:'Signed up!'})\r\n\r\n    }\r\n};\r\n\r\nexport default handler;"]},"metadata":{},"sourceType":"module"}