{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Projects\\\\learn-nextjs\\\\events-api-app\\\\components\\\\input\\\\comments.js\";\nimport { useContext, useEffect, useState } from 'react';\nimport CommentList from './comment-list';\nimport NewComment from './new-comment';\nimport classes from './comments.module.css';\nimport NotificationContext from '../../store/notification-context';\n\nfunction Comments(props) {\n  const {\n    eventId\n  } = props;\n  const notificationCtx = useContext(NotificationContext);\n  const {\n    0: showComments,\n    1: setShowComments\n  } = useState(false);\n  const {\n    0: comments,\n    1: setComments\n  } = useState([]);\n  useEffect(() => {\n    if (showComments) {\n      fetch('/api/comments/' + eventId).then(response => response.json()).then(data => {\n        setComments(data.comments);\n      });\n    }\n  }, [showComments]);\n\n  function toggleCommentsHandler() {\n    setShowComments(prevStatus => !prevStatus);\n  }\n\n  function addCommentHandler(commentData) {\n    notificationCtx.showNotification({\n      title: 'Sending comment...',\n      message: 'Your comment is currently being sent',\n      status: 'pending'\n    }); // send data to API\n\n    fetch('/api/comments/' + eventId, {\n      method: 'POST',\n      body: JSON.stringify(commentData),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      notificationCtx.showNotification({\n        title: 'Success!',\n        message: 'Your comment was saved!',\n        status: 'success'\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCommentsHandler,\n      children: [showComments ? 'Hide' : 'Show', \" Comments\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), showComments && /*#__PURE__*/_jsxDEV(NewComment, {\n      onAddComment: addCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 24\n    }, this), showComments && /*#__PURE__*/_jsxDEV(CommentList, {\n      items: comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\nexport default Comments;","map":{"version":3,"sources":["D:/Projects/learn-nextjs/events-api-app/components/input/comments.js"],"names":["useContext","useEffect","useState","CommentList","NewComment","classes","NotificationContext","Comments","props","eventId","notificationCtx","showComments","setShowComments","comments","setComments","fetch","then","response","json","data","toggleCommentsHandler","prevStatus","addCommentHandler","commentData","showNotification","title","message","status","method","body","JSON","stringify","headers"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,mBAAP,MAAgC,kCAAhC;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AAEA,QAAME,eAAe,GAAGV,UAAU,CAACM,mBAAD,CAAlC;AAEA,QAAM;AAAA,OAACK,YAAD;AAAA,OAAeC;AAAf,MAAkCV,QAAQ,CAAC,KAAD,CAAhD;AAEA,QAAM;AAAA,OAACW,QAAD;AAAA,OAAWC;AAAX,MAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGU,YAAH,EAAgB;AACdI,MAAAA,KAAK,CAAC,mBAAiBN,OAAlB,CAAL,CACCO,IADD,CACMC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EADhB,EAECF,IAFD,CAEOG,IAAD,IAAQ;AACZL,QAAAA,WAAW,CAACK,IAAI,CAACN,QAAN,CAAX;AAED,OALD;AAMD;AACF,GATQ,EASP,CAACF,YAAD,CATO,CAAT;;AAUA,WAASS,qBAAT,GAAiC;AAC/BR,IAAAA,eAAe,CAAES,UAAD,IAAgB,CAACA,UAAlB,CAAf;AAID;;AAED,WAASC,iBAAT,CAA2BC,WAA3B,EAAwC;AACtCb,IAAAA,eAAe,CAACc,gBAAhB,CAAiC;AAC/BC,MAAAA,KAAK,EAAC,oBADyB;AAE/BC,MAAAA,OAAO,EAAE,sCAFsB;AAG/BC,MAAAA,MAAM,EAAC;AAHwB,KAAjC,EADsC,CAMtC;;AACAZ,IAAAA,KAAK,CAAC,mBAAkBN,OAAnB,EAA4B;AAC/BmB,MAAAA,MAAM,EAAC,MADwB;AAE/BC,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeR,WAAf,CAF0B;AAG/BS,MAAAA,OAAO,EAAC;AACN,wBAAe;AADT;AAHuB,KAA5B,CAAL,CAMGhB,IANH,CAMQC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EANlB,EAOCF,IAPD,CAOOG,IAAD,IAAQ;AACZT,MAAAA,eAAe,CAACc,gBAAhB,CAAiC;AAC/BC,QAAAA,KAAK,EAAC,UADyB;AAE/BC,QAAAA,OAAO,EAAE,yBAFsB;AAG/BC,QAAAA,MAAM,EAAC;AAHwB,OAAjC;AAKD,KAbD;AAcD;;AAED,sBACE;AAAS,IAAA,SAAS,EAAEtB,OAAO,CAACQ,QAA5B;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEO,qBAAjB;AAAA,iBACGT,YAAY,GAAG,MAAH,GAAY,MAD3B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIGA,YAAY,iBAAI,QAAC,UAAD;AAAY,MAAA,YAAY,EAAEW;AAA1B;AAAA;AAAA;AAAA;AAAA,YAJnB,EAKGX,YAAY,iBAAI,QAAC,WAAD;AAAa,MAAA,KAAK,EAAEE;AAApB;AAAA;AAAA;AAAA;AAAA,YALnB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;AAED,eAAeN,QAAf","sourcesContent":["import { useContext, useEffect, useState } from 'react';\n\nimport CommentList from './comment-list';\nimport NewComment from './new-comment';\nimport classes from './comments.module.css';\nimport NotificationContext from '../../store/notification-context';\n\nfunction Comments(props) {\n  const { eventId } = props;\n\n  const notificationCtx = useContext(NotificationContext);\n\n  const [showComments, setShowComments] = useState(false);\n\n  const [comments, setComments] = useState([]);\n\n  useEffect(()=>{\n    if(showComments){\n      fetch('/api/comments/'+eventId)\n      .then(response=>response.json())\n      .then((data)=>{\n        setComments(data.comments);\n\n      })\n    }\n  },[showComments])\n  function toggleCommentsHandler() {\n    setShowComments((prevStatus) => !prevStatus);\n\n\n\n  }\n\n  function addCommentHandler(commentData) {\n    notificationCtx.showNotification({\n      title:'Sending comment...',\n      message: 'Your comment is currently being sent',\n      status:'pending'\n    })\n    // send data to API\n    fetch('/api/comments/'+ eventId, {\n      method:'POST',\n      body:JSON.stringify(commentData),\n      headers:{\n        'Content-Type':'application/json'\n      }\n    }).then(response=>response.json())\n    .then((data)=>{\n      notificationCtx.showNotification({\n        title:'Success!',\n        message: 'Your comment was saved!',\n        status:'success'\n      })\n    });\n  }\n\n  return (\n    <section className={classes.comments}>\n      <button onClick={toggleCommentsHandler}>\n        {showComments ? 'Hide' : 'Show'} Comments\n      </button>\n      {showComments && <NewComment onAddComment={addCommentHandler} />}\n      {showComments && <CommentList items={comments}/>}\n    </section>\n  );\n}\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}