{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Projects\\\\learn-nextjs\\\\events-api-app\\\\components\\\\input\\\\comments.js\";\nimport { useState } from 'react';\nimport CommentList from './comment-list';\nimport NewComment from './new-comment';\nimport classes from './comments.module.css';\n\nfunction Comments(props) {\n  const {\n    eventId\n  } = props;\n  const {\n    0: showComments,\n    1: setShowComments\n  } = useState(false);\n\n  function toggleCommentsHandler() {\n    setShowComments(prevStatus => !prevStatus);\n  }\n\n  function addCommentHandler(commentData) {\n    // send data to API\n    fetch('/api/comments/' + eventId, {\n      method: 'POST',\n      body: JSON.stringify(commentData),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => console.log(data));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCommentsHandler,\n      children: [showComments ? 'Hide' : 'Show', \" Comments\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), showComments && /*#__PURE__*/_jsxDEV(NewComment, {\n      onAddComment: addCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 24\n    }, this), showComments && /*#__PURE__*/_jsxDEV(CommentList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\nexport default Comments;","map":{"version":3,"sources":["D:/Projects/learn-nextjs/events-api-app/components/input/comments.js"],"names":["useState","CommentList","NewComment","classes","Comments","props","eventId","showComments","setShowComments","toggleCommentsHandler","prevStatus","addCommentHandler","commentData","fetch","method","body","JSON","stringify","headers","then","response","json","data","console","log","comments"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AAEA,QAAM;AAAA,OAACE,YAAD;AAAA,OAAeC;AAAf,MAAkCR,QAAQ,CAAC,KAAD,CAAhD;;AAEA,WAASS,qBAAT,GAAiC;AAC/BD,IAAAA,eAAe,CAAEE,UAAD,IAAgB,CAACA,UAAlB,CAAf;AACD;;AAED,WAASC,iBAAT,CAA2BC,WAA3B,EAAwC;AACtC;AACAC,IAAAA,KAAK,CAAC,mBAAkBP,OAAnB,EAA4B;AAC/BQ,MAAAA,MAAM,EAAC,MADwB;AAE/BC,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeL,WAAf,CAF0B;AAG/BM,MAAAA,OAAO,EAAC;AACN,wBAAe;AADT;AAHuB,KAA5B,CAAL,CAMGC,IANH,CAMQC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EANlB,EAOCF,IAPD,CAOOG,IAAD,IAAQC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAPd;AAQD;;AAED,sBACE;AAAS,IAAA,SAAS,EAAEnB,OAAO,CAACsB,QAA5B;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEhB,qBAAjB;AAAA,iBACGF,YAAY,GAAG,MAAH,GAAY,MAD3B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIGA,YAAY,iBAAI,QAAC,UAAD;AAAY,MAAA,YAAY,EAAEI;AAA1B;AAAA;AAAA;AAAA;AAAA,YAJnB,EAKGJ,YAAY,iBAAI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YALnB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;AAED,eAAeH,QAAf","sourcesContent":["import { useState } from 'react';\n\nimport CommentList from './comment-list';\nimport NewComment from './new-comment';\nimport classes from './comments.module.css';\n\nfunction Comments(props) {\n  const { eventId } = props;\n\n  const [showComments, setShowComments] = useState(false);\n\n  function toggleCommentsHandler() {\n    setShowComments((prevStatus) => !prevStatus);\n  }\n\n  function addCommentHandler(commentData) {\n    // send data to API\n    fetch('/api/comments/'+ eventId, {\n      method:'POST',\n      body:JSON.stringify(commentData),\n      headers:{\n        'Content-Type':'application/json'\n      }\n    }).then(response=>response.json())\n    .then((data)=>console.log(data));\n  }\n\n  return (\n    <section className={classes.comments}>\n      <button onClick={toggleCommentsHandler}>\n        {showComments ? 'Hide' : 'Show'} Comments\n      </button>\n      {showComments && <NewComment onAddComment={addCommentHandler} />}\n      {showComments && <CommentList />}\n    </section>\n  );\n}\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}