{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Projects\\\\learn-nextjs\\\\events-api-app\\\\store\\\\notification-context.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from 'react';\nvar NotificationContext = /*#__PURE__*/createContext({\n  notification: null,\n  // { title, message, status }\n  showNotification: function showNotification(notificationData) {},\n  hideNotification: function hideNotification() {}\n});\nexport function NotificationContextProvider(props) {\n  _s();\n\n  var _useState = useState(),\n      activeNotification = _useState[0],\n      setActiveNotification = _useState[1];\n\n  useEffect(function () {\n    if (activeNotification && (activeNotification.status === 'success' || activeNotification.status === 'error')) {\n      var timer = setTimeout(function () {\n        setActiveNotification(null);\n      }, 3000);\n      return function () {\n        clearTimeout(timer);\n      };\n    }\n  }, [activeNotification]);\n\n  function showNotificationHandler(notificationData) {\n    setActiveNotification(notificationData);\n  }\n\n  function hideNotificationHandler() {\n    setActiveNotification(null);\n  }\n\n  var context = {\n    notification: activeNotification,\n    showNotification: showNotificationHandler,\n    hideNotification: hideNotificationHandler\n  };\n  return /*#__PURE__*/_jsxDEV(NotificationContext.Provider, {\n    value: context,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NotificationContextProvider, \"Wi3E3Psx/3AX/beWJcnxb8rsCKk=\");\n\n_c = NotificationContextProvider;\nexport default NotificationContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationContextProvider\");","map":{"version":3,"sources":["D:/Projects/learn-nextjs/events-api-app/store/notification-context.js"],"names":["createContext","useState","useEffect","NotificationContext","notification","showNotification","notificationData","hideNotification","NotificationContextProvider","props","activeNotification","setActiveNotification","status","timer","setTimeout","clearTimeout","showNotificationHandler","hideNotificationHandler","context","children"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AAEA,IAAMC,mBAAmB,gBAAGH,aAAa,CAAC;AACxCI,EAAAA,YAAY,EAAE,IAD0B;AACpB;AACpBC,EAAAA,gBAAgB,EAAE,0BAAUC,gBAAV,EAA4B,CAAE,CAFR;AAGxCC,EAAAA,gBAAgB,EAAE,4BAAY,CAAE;AAHQ,CAAD,CAAzC;AAMA,OAAO,SAASC,2BAAT,CAAqCC,KAArC,EAA4C;AAAA;;AAAA,kBACGR,QAAQ,EADX;AAAA,MAC1CS,kBAD0C;AAAA,MACtBC,qBADsB;;AAGjDT,EAAAA,SAAS,CAAC,YAAM;AACd,QACEQ,kBAAkB,KACjBA,kBAAkB,CAACE,MAAnB,KAA8B,SAA9B,IACCF,kBAAkB,CAACE,MAAnB,KAA8B,OAFd,CADpB,EAIE;AACA,UAAMC,KAAK,GAAGC,UAAU,CAAC,YAAM;AAC7BH,QAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD,OAFuB,EAErB,IAFqB,CAAxB;AAIA,aAAO,YAAM;AACXI,QAAAA,YAAY,CAACF,KAAD,CAAZ;AACD,OAFD;AAGD;AACF,GAdQ,EAcN,CAACH,kBAAD,CAdM,CAAT;;AAgBA,WAASM,uBAAT,CAAiCV,gBAAjC,EAAmD;AACjDK,IAAAA,qBAAqB,CAACL,gBAAD,CAArB;AACD;;AAED,WAASW,uBAAT,GAAmC;AACjCN,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD;;AAED,MAAMO,OAAO,GAAG;AACdd,IAAAA,YAAY,EAAEM,kBADA;AAEdL,IAAAA,gBAAgB,EAAEW,uBAFJ;AAGdT,IAAAA,gBAAgB,EAAEU;AAHJ,GAAhB;AAMA,sBACE,QAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAEC,OAArC;AAAA,cACGT,KAAK,CAACU;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAtCeX,2B;;KAAAA,2B;AAwChB,eAAeL,mBAAf","sourcesContent":["import { createContext, useState, useEffect } from 'react';\r\n\r\nconst NotificationContext = createContext({\r\n  notification: null, // { title, message, status }\r\n  showNotification: function (notificationData) {},\r\n  hideNotification: function () {},\r\n});\r\n\r\nexport function NotificationContextProvider(props) {\r\n  const [activeNotification, setActiveNotification] = useState();\r\n\r\n  useEffect(() => {\r\n    if (\r\n      activeNotification &&\r\n      (activeNotification.status === 'success' ||\r\n        activeNotification.status === 'error')\r\n    ) {\r\n      const timer = setTimeout(() => {\r\n        setActiveNotification(null);\r\n      }, 3000);\r\n\r\n      return () => {\r\n        clearTimeout(timer);\r\n      };\r\n    }\r\n  }, [activeNotification]);\r\n\r\n  function showNotificationHandler(notificationData) {\r\n    setActiveNotification(notificationData);\r\n  }\r\n\r\n  function hideNotificationHandler() {\r\n    setActiveNotification(null);\r\n  }\r\n\r\n  const context = {\r\n    notification: activeNotification,\r\n    showNotification: showNotificationHandler,\r\n    hideNotification: hideNotificationHandler,\r\n  };\r\n\r\n  return (\r\n    <NotificationContext.Provider value={context}>\r\n      {props.children}\r\n    </NotificationContext.Provider>\r\n  );\r\n}\r\n\r\nexport default NotificationContext;"]},"metadata":{},"sourceType":"module"}