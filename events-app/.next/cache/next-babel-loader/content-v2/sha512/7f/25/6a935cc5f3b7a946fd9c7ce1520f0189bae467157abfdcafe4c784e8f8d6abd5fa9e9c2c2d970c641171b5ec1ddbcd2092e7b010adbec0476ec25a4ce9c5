{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Projects\\\\learn-nextjs\\\\events-app\\\\pages\\\\events\\\\[...slug].js\";\nimport { Fragment } from 'react';\nimport { useRouter } from 'next/router';\nimport { getFilteredEvents } from '../../helpers/api-util';\nimport EventList from '../../components/events/event-list';\nimport ResultsTitle from '../../components/events/results-title';\nimport Button from '../../components/ui/button';\nimport ErrorAlert from '../../components/ui/error-alert';\n\nfunction FilteredEventsPage(props) {\n  const router = useRouter(); // const filterData = router.query.slug;\n  // if (!filterData) {\n  //   return <p className='center'>Loading...</p>;\n  // }\n  // const filteredYear = filterData[0];\n  // const filteredMonth = filterData[1];\n  // const numYear = +filteredYear;\n  // const numMonth = +filteredMonth;\n\n  if (props.hasError) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ErrorAlert, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Invalid filter. Please adjust your values!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          link: \"/events\",\n          children: \"Show All Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n  const filteredEvents = getFilteredEvents({\n    year: numYear,\n    month: numMonth\n  });\n\n  if (!filteredEvents || filteredEvents.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ErrorAlert, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No events found for the chosen filter!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          link: \"/events\",\n          children: \"Show All Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n  const date = new Date(numYear, numMonth - 1);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ResultsTitle, {\n      date: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventList, {\n      items: filteredEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getSeverSideProps(context) {\n  const {\n    params\n  } = context;\n  filteredData = params.slug;\n  const filteredYear = filterData[0];\n  const filteredMonth = filterData[1];\n  const numYear = +filteredYear;\n  const numMonth = +filteredMonth;\n\n  if (isNaN(numYear) || isNaN(numMonth) || numYear > 2030 || numYear < 2021 || numMonth < 1 || numMonth > 12) {\n    return {\n      props: {\n        hasError: true\n      } // notFound:true,\n\n    };\n  }\n\n  const filteredEvents = getFilteredEvents({\n    year: numYear,\n    month: numMonth\n  });\n  return {\n    props: {\n      events: filteredEvents\n    }\n  };\n}\nexport default FilteredEventsPage;","map":{"version":3,"sources":["D:/Projects/learn-nextjs/events-app/pages/events/[...slug].js"],"names":["Fragment","useRouter","getFilteredEvents","EventList","ResultsTitle","Button","ErrorAlert","FilteredEventsPage","props","router","hasError","filteredEvents","year","numYear","month","numMonth","length","date","Date","getSeverSideProps","context","params","filteredData","slug","filteredYear","filterData","filteredMonth","isNaN","events"],"mappings":"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","sourcesContent":["import { Fragment } from 'react';\nimport { useRouter } from 'next/router';\n\nimport { getFilteredEvents } from '../../helpers/api-util';\nimport EventList from '../../components/events/event-list';\nimport ResultsTitle from '../../components/events/results-title';\nimport Button from '../../components/ui/button';\nimport ErrorAlert from '../../components/ui/error-alert';\n\nfunction FilteredEventsPage(props) {\n  const router = useRouter();\n\n  // const filterData = router.query.slug;\n\n  // if (!filterData) {\n  //   return <p className='center'>Loading...</p>;\n  // }\n\n  // const filteredYear = filterData[0];\n  // const filteredMonth = filterData[1];\n\n  // const numYear = +filteredYear;\n  // const numMonth = +filteredMonth;\n\n  if (props.hasError) {\n    return (\n      <Fragment>\n        <ErrorAlert>\n          <p>Invalid filter. Please adjust your values!</p>\n        </ErrorAlert>\n        <div className='center'>\n          <Button link='/events'>Show All Events</Button>\n        </div>\n      </Fragment>\n    );\n  }\n\n  const filteredEvents = getFilteredEvents({\n    year: numYear,\n    month: numMonth,\n  });\n\n  if (!filteredEvents || filteredEvents.length === 0) {\n    return (\n      <Fragment>\n        <ErrorAlert>\n          <p>No events found for the chosen filter!</p>\n        </ErrorAlert>\n        <div className='center'>\n          <Button link='/events'>Show All Events</Button>\n        </div>\n      </Fragment>\n    );\n  }\n\n  const date = new Date(numYear, numMonth - 1);\n\n  return (\n    <Fragment>\n      <ResultsTitle date={date} />\n      <EventList items={filteredEvents} />\n    </Fragment>\n  );\n}\n\nexport async function getSeverSideProps(context){\n  const{params} = context;\n\n  filteredData = params.slug;\n\n  const filteredYear = filterData[0];\n  const filteredMonth = filterData[1];\n\n  const numYear = +filteredYear;\n  const numMonth = +filteredMonth;\n\n  if (\n    isNaN(numYear) ||\n    isNaN(numMonth) ||\n    numYear > 2030 ||\n    numYear < 2021 ||\n    numMonth < 1 ||\n    numMonth > 12\n  ) {\n    return {\n      props:{hasError:true}\n      // notFound:true,\n    };\n  }\n\n  const filteredEvents = getFilteredEvents({\n    year: numYear,\n    month: numMonth,\n  });\n\n  return {\n    props: {\n      events:filteredEvents\n    }\n  };\n}\n\nexport default FilteredEventsPage;\n"]},"metadata":{},"sourceType":"module"}