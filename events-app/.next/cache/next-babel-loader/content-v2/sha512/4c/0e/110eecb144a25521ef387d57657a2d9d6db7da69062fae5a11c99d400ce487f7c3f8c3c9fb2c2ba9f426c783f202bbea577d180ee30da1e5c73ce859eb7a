{"ast":null,"code":"import _regeneratorRuntime from \"D:/Projects/learn-nextjs/events-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/Projects/learn-nextjs/events-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Projects\\\\learn-nextjs\\\\events-app\\\\pages\\\\events\\\\[...slug].js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from 'react';\nimport { useRouter } from 'next/router';\nimport { getFilteredEvents } from '../../helpers/api-util';\nimport EventList from '../../components/events/event-list';\nimport ResultsTitle from '../../components/events/results-title';\nimport Button from '../../components/ui/button';\nimport ErrorAlert from '../../components/ui/error-alert';\n\nfunction FilteredEventsPage(props) {\n  _s();\n\n  var router = useRouter(); // const filterData = router.query.slug;\n  // if (!filterData) {\n  //   return <p className='center'>Loading...</p>;\n  // }\n  // const filteredYear = filterData[0];\n  // const filteredMonth = filterData[1];\n  // const numYear = +filteredYear;\n  // const numMonth = +filteredMonth;\n\n  if (props.hasError) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ErrorAlert, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Invalid filter. Please adjust your values!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          link: \"/events\",\n          children: \"Show All Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n  var filteredEvents = props.events;\n\n  if (!filteredEvents || filteredEvents.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ErrorAlert, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No events found for the chosen filter!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          link: \"/events\",\n          children: \"Show All Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n  var date = new Date(props.date.year, props.date.month - 1);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ResultsTitle, {\n      date: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventList, {\n      items: filteredEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FilteredEventsPage, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = FilteredEventsPage;\nexport function getSeverSideProps(_x) {\n  return _getSeverSideProps.apply(this, arguments);\n}\n\nfunction _getSeverSideProps() {\n  _getSeverSideProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var params, filteredYear, filteredMonth, numYear, numMonth, filteredEvents;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            params = context.params;\n            filteredData = params.slug;\n            filteredYear = filterData[0];\n            filteredMonth = filterData[1];\n            numYear = +filteredYear;\n            numMonth = +filteredMonth;\n\n            if (!(isNaN(numYear) || isNaN(numMonth) || numYear > 2030 || numYear < 2021 || numMonth < 1 || numMonth > 12)) {\n              _context.next = 8;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              props: {\n                hasError: true\n              } // notFound:true,\n\n            });\n\n          case 8:\n            _context.next = 10;\n            return getFilteredEvents({\n              year: numYear,\n              month: numMonth\n            });\n\n          case 10:\n            filteredEvents = _context.sent;\n            return _context.abrupt(\"return\", {\n              props: {\n                events: filteredEvents,\n                date: {\n                  year: numYear,\n                  month: numMonth\n                }\n              }\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getSeverSideProps.apply(this, arguments);\n}\n\nexport default FilteredEventsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilteredEventsPage\");","map":{"version":3,"sources":["D:/Projects/learn-nextjs/events-app/pages/events/[...slug].js"],"names":["Fragment","useRouter","getFilteredEvents","EventList","ResultsTitle","Button","ErrorAlert","FilteredEventsPage","props","router","hasError","filteredEvents","events","length","date","Date","year","month","getSeverSideProps","context","params","filteredData","slug","filteredYear","filterData","filteredMonth","numYear","numMonth","isNaN"],"mappings":"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","sourcesContent":["import { Fragment } from 'react';\nimport { useRouter } from 'next/router';\n\nimport { getFilteredEvents } from '../../helpers/api-util';\nimport EventList from '../../components/events/event-list';\nimport ResultsTitle from '../../components/events/results-title';\nimport Button from '../../components/ui/button';\nimport ErrorAlert from '../../components/ui/error-alert';\n\nfunction FilteredEventsPage(props) {\n  const router = useRouter();\n\n  // const filterData = router.query.slug;\n\n  // if (!filterData) {\n  //   return <p className='center'>Loading...</p>;\n  // }\n\n  // const filteredYear = filterData[0];\n  // const filteredMonth = filterData[1];\n\n  // const numYear = +filteredYear;\n  // const numMonth = +filteredMonth;\n\n  if (props.hasError) {\n    return (\n      <Fragment>\n        <ErrorAlert>\n          <p>Invalid filter. Please adjust your values!</p>\n        </ErrorAlert>\n        <div className='center'>\n          <Button link='/events'>Show All Events</Button>\n        </div>\n      </Fragment>\n    );\n  }\n\n  const filteredEvents = props.events;\n\n  if (!filteredEvents || filteredEvents.length === 0) {\n    return (\n      <Fragment>\n        <ErrorAlert>\n          <p>No events found for the chosen filter!</p>\n        </ErrorAlert>\n        <div className='center'>\n          <Button link='/events'>Show All Events</Button>\n        </div>\n      </Fragment>\n    );\n  }\n\n  const date = new Date(props.date.year, props.date.month - 1);\n\n  return (\n    <Fragment>\n      <ResultsTitle date={date} />\n      <EventList items={filteredEvents} />\n    </Fragment>\n  );\n}\n\nexport async function getSeverSideProps(context){\n  const{params} = context;\n\n  filteredData = params.slug;\n\n  const filteredYear = filterData[0];\n  const filteredMonth = filterData[1];\n\n  const numYear = +filteredYear;\n  const numMonth = +filteredMonth;\n\n  if (\n    isNaN(numYear) ||\n    isNaN(numMonth) ||\n    numYear > 2030 ||\n    numYear < 2021 ||\n    numMonth < 1 ||\n    numMonth > 12\n  ) {\n    return {\n      props:{hasError:true}\n      // notFound:true,\n    };\n  }\n\n  const filteredEvents = await getFilteredEvents({\n    year: numYear,\n    month: numMonth,\n  });\n\n  return {\n    props: {\n      events:filteredEvents,\n      date : {\n        year:numYear,\n        month:numMonth\n      }\n    }\n  };\n}\n\nexport default FilteredEventsPage;\n"]},"metadata":{},"sourceType":"module"}