{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"D:/Projects/learn-nextjs/events-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"D:\\\\Projects\\\\learn-nextjs\\\\events-app\\\\pages\\\\events\\\\[...slug].js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Fragment, useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport useSWR from 'swr';\nimport { getFilteredEvents } from '../../helpers/api-util';\nimport EventList from '../../components/events/event-list';\nimport ResultsTitle from '../../components/events/results-title';\nimport Button from '../../components/ui/button';\nimport ErrorAlert from '../../components/ui/error-alert';\nimport Head from 'next/head';\n\nfunction FilteredEventsPage(props) {\n  _s();\n\n  var _useState = useState(),\n      loadedEvents = _useState[0],\n      setLoadedEvents = _useState[1];\n\n  var router = useRouter();\n  var filterData = router.query.slug;\n\n  var _useSWR = useSWR('https://nextjs-course-4b290-default-rtdb.firebaseio.com/events.json'),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  useEffect(function () {\n    if (data) {\n      var events = [];\n\n      for (var key in data) {\n        events.push(_objectSpread({\n          id: key\n        }, data[key]));\n      }\n\n      setLoadedEvents(events);\n    }\n  }, [data]);\n  var filteredYear = filterData[0];\n  var filteredMonth = filterData[1];\n  var numYear = +filteredYear;\n  var numMonth = +filteredMonth;\n\n  var pageHeadData = /*#__PURE__*/_jsxDEV(Head, {\n    children: [/*#__PURE__*/_jsxDEV(\"title\", {\n      children: \"Filtered events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n      name: \"description\",\n      content: \"All events for \".concat(numMonth, \"/\").concat(numYear, \".\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 28\n  }, this);\n\n  if (!loadedEvents) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [pageHeadData, /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"center\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this);\n  }\n\n  if (isNaN(numYear) || isNaN(numMonth) || numYear > 2030 || numYear < 2021 || numMonth < 1 || numMonth > 12) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ErrorAlert, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Invalid filter. Please adjust your values!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          link: \"/events\",\n          children: \"Show All Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n  var filteredEvents = loadedEvents.filter(function (event) {\n    var eventDate = new Date(event.date);\n    return eventDate.getFullYear() === numYear && eventDate.getMonth() === numMonth - 1;\n  });\n\n  if (!filteredEvents || filteredEvents.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ErrorAlert, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No events found for the chosen filter!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          link: \"/events\",\n          children: \"Show All Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  }\n\n  var date = new Date(numYear, numMonth - 1);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ResultsTitle, {\n      date: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventList, {\n      items: filteredEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n} // Server-side rendering \n// export async function getServerSideProps(context){\n//   const{params} = context;\n//   const filterData = params.slug;\n//   const filteredYear = filterData[0];\n//   const filteredMonth = filterData[1];\n//   const numYear = +filteredYear;\n//   const numMonth = +filteredMonth;\n//   if (\n//     isNaN(numYear) ||\n//     isNaN(numMonth) ||\n//     numYear > 2030 ||\n//     numYear < 2021 ||\n//     numMonth < 1 ||\n//     numMonth > 12\n//   ) {\n//     return {\n//       props:{hasError:true}\n//       // notFound:true,\n//     };\n//   }\n//   const filteredEvents = await getFilteredEvents({\n//     year: numYear,\n//     month: numMonth,\n//   });\n//   return {\n//     props: {\n//       events:filteredEvents,\n//       date : {\n//         year:numYear,\n//         month:numMonth,\n//       },\n//     }\n//   };\n// }\n\n\n_s(FilteredEventsPage, \"GX80lACDceDfc4Z9DzgY4WObsPA=\", false, function () {\n  return [useRouter, useSWR];\n});\n\n_c = FilteredEventsPage;\nexport default FilteredEventsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilteredEventsPage\");","map":{"version":3,"sources":["D:/Projects/learn-nextjs/events-app/pages/events/[...slug].js"],"names":["Fragment","useEffect","useState","useRouter","useSWR","getFilteredEvents","EventList","ResultsTitle","Button","ErrorAlert","Head","FilteredEventsPage","props","loadedEvents","setLoadedEvents","router","filterData","query","slug","data","error","events","key","push","id","filteredYear","filteredMonth","numYear","numMonth","pageHeadData","isNaN","filteredEvents","filter","event","eventDate","Date","date","getFullYear","getMonth","length"],"mappings":"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","sourcesContent":["import { Fragment, useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport useSWR from 'swr'\nimport { getFilteredEvents } from '../../helpers/api-util';\nimport EventList from '../../components/events/event-list';\nimport ResultsTitle from '../../components/events/results-title';\nimport Button from '../../components/ui/button';\nimport ErrorAlert from '../../components/ui/error-alert';\nimport Head from 'next/head';\n\nfunction FilteredEventsPage(props) {\n  const [loadedEvents, setLoadedEvents] = useState();\n  const router = useRouter();\n\n  const filterData = router.query.slug;\n\n  const {data, error} = useSWR('https://nextjs-course-4b290-default-rtdb.firebaseio.com/events.json');\n\n  useEffect(()=>{\n    if(data){\n      const events = [];\n      for(const key in data){\n        events.push({\n          id:key,\n          ...data[key],\n        });\n      }\n      setLoadedEvents(events);\n    }\n  }, [data])\n\n  const filteredYear = filterData[0];\n  const filteredMonth = filterData[1];\n\n  const numYear = +filteredYear;\n  const numMonth = +filteredMonth;\n\n  const pageHeadData =     <Head>\n  <title>Filtered events</title>\n  <meta name=\"description\" \n  content={`All events for ${numMonth}/${numYear}.`}/>\n</Head>\n\n  if (!loadedEvents) {\n    return (\n    <Fragment>\n      {pageHeadData}\n      <p className='center'>Loading...</p>\n    </Fragment>\n    );\n  }\n\n  \n\n\n  if  (\n    isNaN(numYear) ||\n    isNaN(numMonth) ||\n    numYear > 2030 ||\n    numYear < 2021 ||\n    numMonth < 1 ||\n    numMonth > 12\n  ) {\n    return (\n      <Fragment>\n        <ErrorAlert>\n          <p>Invalid filter. Please adjust your values!</p>\n        </ErrorAlert>\n        <div className='center'>\n          <Button link='/events'>Show All Events</Button>\n        </div>\n      </Fragment>\n    );\n  }\n\n  const filteredEvents = loadedEvents.filter((event) => {\n    const eventDate = new Date(event.date);\n    return (\n      eventDate.getFullYear() === numYear &&\n      eventDate.getMonth() === numMonth - 1\n    );\n  });\n\n  if (!filteredEvents || filteredEvents.length === 0) {\n    return (\n      <Fragment>\n        <ErrorAlert>\n          <p>No events found for the chosen filter!</p>\n        </ErrorAlert>\n        <div className='center'>\n          <Button link='/events'>Show All Events</Button>\n        </div>\n      </Fragment>\n    );\n  }\n\n  const date = new Date(numYear, numMonth - 1);\n\n  return (\n    <Fragment>\n\n      <ResultsTitle date={date} />\n      <EventList items={filteredEvents} />\n    </Fragment>\n  );\n}\n\n// Server-side rendering \n// export async function getServerSideProps(context){\n//   const{params} = context;\n\n//   const filterData = params.slug;\n\n//   const filteredYear = filterData[0];\n//   const filteredMonth = filterData[1];\n\n//   const numYear = +filteredYear;\n//   const numMonth = +filteredMonth;\n\n//   if (\n//     isNaN(numYear) ||\n//     isNaN(numMonth) ||\n//     numYear > 2030 ||\n//     numYear < 2021 ||\n//     numMonth < 1 ||\n//     numMonth > 12\n//   ) {\n//     return {\n//       props:{hasError:true}\n//       // notFound:true,\n//     };\n//   }\n\n//   const filteredEvents = await getFilteredEvents({\n//     year: numYear,\n//     month: numMonth,\n//   });\n\n//   return {\n//     props: {\n//       events:filteredEvents,\n//       date : {\n//         year:numYear,\n//         month:numMonth,\n//       },\n//     }\n//   };\n// }\n\n\n\nexport default FilteredEventsPage;\n"]},"metadata":{},"sourceType":"module"}