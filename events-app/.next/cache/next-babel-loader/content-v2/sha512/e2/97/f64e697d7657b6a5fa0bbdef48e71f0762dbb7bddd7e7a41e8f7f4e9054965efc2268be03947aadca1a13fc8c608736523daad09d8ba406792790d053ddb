{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport async function getAllEvents() {\n  const response = await fetch('https://nextjs-course-4b290-default-rtdb.firebaseio.com/events.json');\n  const data = await response.json();\n  const events = [];\n\n  for (const key in data) {\n    events.push(_objectSpread({\n      id: key\n    }, data[key]));\n  }\n\n  return events;\n}\nexport async function getFeaturedEvents() {\n  const allEvents = await getAllEvents();\n  return allEvents.filter(event => event.isFeatured);\n}\nexport async function getEventById(id) {\n  const allEvents = await getAllEvents();\n  return allEvents.find(event => event.id === id);\n}\nexport async function getFilteredEvents(dateFilter) {\n  const {\n    year,\n    month\n  } = dateFilter;\n  events = await getAllEvents();\n  let filteredEvents = events.filter(event => {\n    const eventDate = new Date(event.date);\n    return eventDate.getFullYear() === year && eventDate.getMonth() === month - 1;\n  });\n  return filteredEvents;\n}","map":{"version":3,"sources":["D:/Projects/learn-nextjs/events-app/helpers/api-util.js"],"names":["getAllEvents","response","fetch","data","json","events","key","push","id","getFeaturedEvents","allEvents","filter","event","isFeatured","getEventById","find","getFilteredEvents","dateFilter","year","month","filteredEvents","eventDate","Date","date","getFullYear","getMonth"],"mappings":";;;;;;AACA,OAAO,eAAeA,YAAf,GAA6B;AAChC,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qEAAD,CAA5B;AACA,QAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEA,QAAMC,MAAM,GAAG,EAAf;;AAEA,OAAI,MAAMC,GAAV,IAAiBH,IAAjB,EAAsB;AAClBE,IAAAA,MAAM,CAACE,IAAP;AACIC,MAAAA,EAAE,EAACF;AADP,OAEOH,IAAI,CAACG,GAAD,CAFX;AAIH;;AACD,SAAOD,MAAP;AACH;AAED,OAAO,eAAeI,iBAAf,GAAmC;AACtC,QAAMC,SAAS,GAAG,MAAMV,YAAY,EAApC;AAEA,SAAOU,SAAS,CAACC,MAAV,CAAkBC,KAAD,IAAWA,KAAK,CAACC,UAAlC,CAAP;AACD;AAEH,OAAO,eAAeC,YAAf,CAA4BN,EAA5B,EAAgC;AAEnC,QAAME,SAAS,GAAG,MAAMV,YAAY,EAApC;AAEA,SAAOU,SAAS,CAACK,IAAV,CAAgBH,KAAD,IAAWA,KAAK,CAACJ,EAAN,KAAaA,EAAvC,CAAP;AACD;AAEH,OAAO,eAAeQ,iBAAf,CAAiCC,UAAjC,EAA6C;AACpD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBF,UAAxB;AAEAZ,EAAAA,MAAM,GAAG,MAAML,YAAY,EAA3B;AAEA,MAAIoB,cAAc,GAAGf,MAAM,CAACM,MAAP,CAAeC,KAAD,IAAW;AAC1C,UAAMS,SAAS,GAAG,IAAIC,IAAJ,CAASV,KAAK,CAACW,IAAf,CAAlB;AACA,WAAOF,SAAS,CAACG,WAAV,OAA4BN,IAA5B,IAAoCG,SAAS,CAACI,QAAV,OAAyBN,KAAK,GAAG,CAA5E;AACH,GAHoB,CAArB;AAKA,SAAOC,cAAP;AACC","sourcesContent":["\r\nexport async function getAllEvents(){\r\n    const response = await fetch('https://nextjs-course-4b290-default-rtdb.firebaseio.com/events.json');\r\n    const data = await response.json();\r\n\r\n    const events = [];\r\n\r\n    for(const key in data){\r\n        events.push({\r\n            id:key,\r\n            ...data[key]\r\n        });\r\n    }\r\n    return events;\r\n}\r\n\r\nexport async function getFeaturedEvents() {\r\n    const allEvents = await getAllEvents();\r\n\r\n    return allEvents.filter((event) => event.isFeatured);\r\n  }\r\n\r\nexport async function getEventById(id) {\r\n\r\n    const allEvents = await getAllEvents();\r\n\r\n    return allEvents.find((event) => event.id === id);\r\n  }\r\n\r\nexport async function getFilteredEvents(dateFilter) {\r\nconst { year, month } = dateFilter;\r\n\r\nevents = await getAllEvents();\r\n\r\nlet filteredEvents = events.filter((event) => {\r\n    const eventDate = new Date(event.date);\r\n    return eventDate.getFullYear() === year && eventDate.getMonth() === month - 1;\r\n});\r\n\r\nreturn filteredEvents;\r\n}"]},"metadata":{},"sourceType":"module"}