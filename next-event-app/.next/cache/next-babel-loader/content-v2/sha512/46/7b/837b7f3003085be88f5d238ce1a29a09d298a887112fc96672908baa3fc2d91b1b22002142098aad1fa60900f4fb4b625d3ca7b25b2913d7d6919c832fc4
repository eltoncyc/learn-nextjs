{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Projects\\\\learn-nextjs\\\\next-event-app\\\\pages\\\\events\\\\[...slug].js\";\nimport { Fragment } from 'react';\nimport { useRouter } from 'next/router';\nimport { getFilteredEvents } from '../../dummy-data';\nimport EventList from '../../components/events/event-list';\nimport ResultsTitle from '../../components/events/results-title';\nimport Button from '../../components/ui/button';\nimport ErrorAlert from '../../components/ui/error-alert';\n\nconst FilteredEventPage = () => {\n  const router = useRouter();\n  const filterData = router.query.slug;\n\n  if (!filterData) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"center\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 16\n    }, this);\n  }\n\n  const filteredYear = filterData[0];\n  const filteredMonth = filterData[1];\n  const numYear = +filteredYear;\n  const numMonth = +filteredMonth;\n\n  if (isNaN(numYear) || isNaN(numMonth) || numYear > 2030 || numYear < 2021 || numMonth > 12 || numMonth < 1) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ErrorAlert, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Invalid filter. Please adjust your search.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          link: \"/events\",\n          children: \"Show All Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, this);\n  }\n\n  const filteredEvents = getFilteredEvents({\n    year: numYear,\n    month: numMonth\n  });\n\n  if (!filteredEvents || filteredEvents.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ErrorAlert, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No events found for the chosen filter!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          link: \"/events\",\n          children: \"Show All Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this);\n  }\n\n  const date = new Date(numYear, numMonth - 1);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ResultsTitle, {\n      date: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(EventList, {\n      items: filteredEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\nexport default FilteredEventPage;","map":{"version":3,"sources":["D:/Projects/learn-nextjs/next-event-app/pages/events/[...slug].js"],"names":["Fragment","useRouter","getFilteredEvents","EventList","ResultsTitle","Button","ErrorAlert","FilteredEventPage","router","filterData","query","slug","filteredYear","filteredMonth","numYear","numMonth","isNaN","filteredEvents","year","month","length","date","Date"],"mappings":";;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;;AAEA,MAAMC,iBAAiB,GAAC,MAAI;AACxB,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAMQ,UAAU,GAAGD,MAAM,CAACE,KAAP,CAAaC,IAAhC;;AAEA,MAAG,CAACF,UAAJ,EAAe;AACX,wBAAO;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,QAAMG,YAAY,GAAGH,UAAU,CAAC,CAAD,CAA/B;AACA,QAAMI,aAAa,GAAGJ,UAAU,CAAC,CAAD,CAAhC;AAEA,QAAMK,OAAO,GAAG,CAACF,YAAjB;AACA,QAAMG,QAAQ,GAAG,CAACF,aAAlB;;AAEA,MAAGG,KAAK,CAACF,OAAD,CAAL,IAAkBE,KAAK,CAACD,QAAD,CAAvB,IACHD,OAAO,GAAC,IADL,IACaA,OAAO,GAAG,IADvB,IAEHC,QAAQ,GAAG,EAFR,IAEaA,QAAQ,GAAC,CAFzB,EAE2B;AACvB,wBAAO,QAAC,QAAD;AAAA,8BACH,QAAC,UAAD;AAAA,+BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADG,eAKH;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACA,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cALG;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAUH;;AAED,QAAME,cAAc,GAAGf,iBAAiB,CAAC;AACrCgB,IAAAA,IAAI,EAACJ,OADgC;AAErCK,IAAAA,KAAK,EAACJ;AAF+B,GAAD,CAAxC;;AAKA,MAAG,CAACE,cAAD,IAAmBA,cAAc,CAACG,MAAf,KAAwB,CAA9C,EAAgD;AAC5C,wBAAO,QAAC,QAAD;AAAA,8BACH,QAAC,UAAD;AAAA,+BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADG,eAIH;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACA,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAJG;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AASH;;AAED,QAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASR,OAAT,EAAkBC,QAAQ,GAAE,CAA5B,CAAb;AAGA,sBACI,QAAC,QAAD;AAAA,4BACA,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEM;AAApB;AAAA;AAAA;AAAA;AAAA,YADA,eAEI,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEJ;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAvDD;;AAyDA,eAAeV,iBAAf","sourcesContent":["import {Fragment} from 'react';\r\nimport {useRouter} from 'next/router';\r\nimport { getFilteredEvents } from '../../dummy-data';\r\nimport EventList from '../../components/events/event-list';\r\nimport ResultsTitle from '../../components/events/results-title';\r\nimport Button from '../../components/ui/button';\r\nimport ErrorAlert from '../../components/ui/error-alert';\r\n\r\nconst FilteredEventPage=()=>{\r\n    const router = useRouter();\r\n    const filterData = router.query.slug;\r\n\r\n    if(!filterData){\r\n        return <p className='center'>Loading...</p>;\r\n    }\r\n\r\n    const filteredYear = filterData[0];\r\n    const filteredMonth = filterData[1];\r\n\r\n    const numYear = +filteredYear;\r\n    const numMonth = +filteredMonth;\r\n\r\n    if(isNaN(numYear) || isNaN(numMonth) || \r\n    numYear>2030 || numYear < 2021 ||\r\n    numMonth > 12|| numMonth<1){\r\n        return <Fragment>\r\n            <ErrorAlert>\r\n            <p>Invalid filter. Please adjust your search.</p>\r\n            </ErrorAlert>\r\n            \r\n            <div className='center'>\r\n            <Button link='/events'>Show All Events</Button>\r\n            </div>\r\n            \r\n        </Fragment>\r\n    }\r\n\r\n    const filteredEvents = getFilteredEvents({\r\n        year:numYear,\r\n        month:numMonth\r\n    });\r\n\r\n    if(!filteredEvents || filteredEvents.length===0){\r\n        return <Fragment>\r\n            <ErrorAlert>\r\n            <p>No events found for the chosen filter!</p>\r\n            </ErrorAlert>\r\n            <div className='center'>\r\n            <Button link='/events'>Show All Events</Button>\r\n            </div>\r\n        </Fragment>\r\n        \r\n    }\r\n\r\n    const date = new Date(numYear, numMonth -1);\r\n\r\n\r\n    return(\r\n        <Fragment>\r\n        <ResultsTitle date={date}/>\r\n            <EventList items={filteredEvents}/>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default FilteredEventPage;"]},"metadata":{},"sourceType":"module"}