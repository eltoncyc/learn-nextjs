{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Projects\\\\learn-nextjs\\\\next-event-app\\\\pages\\\\events\\\\[eventId].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useRouter } from 'next/router';\nimport { Fragment } from 'react';\nimport { getEventById } from '../../dummy-data';\nimport EventSummary from '../../components/event-detail/event-summary';\nimport EventLogistics from '../../components/event-detail/event-logistics';\nimport EventContent from '../../components/event-detail/event-content';\n\nvar EventDetailPage = function EventDetailPage() {\n  _s();\n\n  var router = useRouter();\n  var eventId = router.query.eventId;\n  var event = getEventById(eventId);\n\n  if (!event) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No event found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(EventSummary, {\n      title: event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(EventLogistics, {\n      date: event.date,\n      address: event.location,\n      image: event.image,\n      imageAlt: event.tite\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(EventContent, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: event.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(EventDetailPage, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = EventDetailPage;\nexport default EventDetailPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"sources":["D:/Projects/learn-nextjs/next-event-app/pages/events/[eventId].js"],"names":["useRouter","Fragment","getEventById","EventSummary","EventLogistics","EventContent","EventDetailPage","router","eventId","query","event","title","date","location","image","tite","description"],"mappings":";;;;;;AACA,SAAQA,SAAR,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAAQC,YAAR,QAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,6CAAzB;AACA,OAAOC,cAAP,MAA2B,+CAA3B;AACA,OAAOC,YAAP,MAAyB,6CAAzB;;AAEA,IAAMC,eAAe,GAAC,SAAhBA,eAAgB,GAAI;AAAA;;AACtB,MAAMC,MAAM,GAAGP,SAAS,EAAxB;AAEA,MAAMQ,OAAO,GAAGD,MAAM,CAACE,KAAP,CAAaD,OAA7B;AACA,MAAME,KAAK,GAAGR,YAAY,CAACM,OAAD,CAA1B;;AAEA,MAAG,CAACE,KAAJ,EAAU;AACN,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACH;;AAED,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI,QAAC,cAAD;AAAgB,MAAA,IAAI,EAAED,KAAK,CAACE,IAA5B;AAAkC,MAAA,OAAO,EAAEF,KAAK,CAACG,QAAjD;AAA2D,MAAA,KAAK,EAAEH,KAAK,CAACI,KAAxE;AAA+E,MAAA,QAAQ,EAAEJ,KAAK,CAACK;AAA/F;AAAA;AAAA;AAAA;AAAA,aAFJ,eAGI,QAAC,YAAD;AAAA,6BACI;AAAA,kBAAIL,KAAK,CAACM;AAAV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AASH,CAnBD;;GAAMV,e;UACaN,S;;;KADbM,e;AAqBN,eAAeA,eAAf","sourcesContent":["\r\nimport {useRouter} from 'next/router';\r\nimport { Fragment } from 'react';\r\nimport {getEventById} from '../../dummy-data';\r\nimport EventSummary from '../../components/event-detail/event-summary';\r\nimport EventLogistics from '../../components/event-detail/event-logistics';\r\nimport EventContent from '../../components/event-detail/event-content';\r\n\r\nconst EventDetailPage=()=>{\r\n    const router = useRouter();\r\n\r\n    const eventId = router.query.eventId;\r\n    const event = getEventById(eventId);\r\n    \r\n    if(!event){\r\n        return <p>No event found!</p>;\r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n            <EventSummary title={event.title}/>\r\n            <EventLogistics date={event.date} address={event.location} image={event.image} imageAlt={event.tite}/>\r\n            <EventContent>\r\n                <p>{event.description}</p>\r\n            </EventContent>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default EventDetailPage;"]},"metadata":{},"sourceType":"module"}