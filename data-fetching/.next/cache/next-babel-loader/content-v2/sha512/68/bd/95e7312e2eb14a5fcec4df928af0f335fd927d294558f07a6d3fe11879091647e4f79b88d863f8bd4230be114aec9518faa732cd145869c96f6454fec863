{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Projects\\\\learn-nextjs\\\\data-fetching\\\\pages\\\\[pid].js\",\n    _this = this;\n\nimport { Fragment } from \"react\";\n\nvar ProductDetailPage = function ProductDetailPage(props) {\n  var loadedProduct = props.loadedProduct;\n\n  if (!loadedProduct) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 16\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: loadedProduct.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: loadedProduct.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 12\n  }, _this);\n};\n\n_c = ProductDetailPage;\nexport var __N_SSG = true;\nexport default ProductDetailPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductDetailPage\");","map":{"version":3,"sources":["D:/Projects/learn-nextjs/data-fetching/pages/[pid].js"],"names":["Fragment","ProductDetailPage","props","loadedProduct","title","description"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAwB,OAAxB;;AAIA,IAAMC,iBAAiB,GAAC,SAAlBA,iBAAkB,CAACC,KAAD,EAAS;AAAA,MACtBC,aADsB,GACLD,KADK,CACtBC,aADsB;;AAG7B,MAAG,CAACA,aAAJ,EAAkB;AACd,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACH;;AAED,sBAAO,QAAC,QAAD;AAAA,4BACH;AAAA,gBAAKA,aAAa,CAACC;AAAnB;AAAA;AAAA;AAAA;AAAA,aADG,eAEH;AAAA,gBAAID,aAAa,CAACE;AAAlB;AAAA;AAAA;AAAA;AAAA,aAFG;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AAIH,CAXD;;KAAMJ,iB;;AAqDN,eAAeA,iBAAf","sourcesContent":["import { Fragment} from \"react\";\r\nimport path from 'path';\r\nimport fs from 'fs/promises';\r\n\r\nconst ProductDetailPage=(props)=>{\r\n    const {loadedProduct} = props;\r\n\r\n    if(!loadedProduct){\r\n        return <p>loading...</p>;\r\n    }\r\n\r\n    return <Fragment>\r\n        <h1>{loadedProduct.title}</h1>\r\n        <p>{loadedProduct.description}</p>\r\n    </Fragment>\r\n}\r\n\r\nasync function getData(){\r\n    const filePath = path.join(process.cwd(), 'data', 'dummy-backend.json');\r\n    const jsonData = await fs.readFile(filePath);\r\n    const data = JSON.parse(jsonData);\r\n    return data;\r\n}\r\n\r\nexport async function getStaticProps(context){\r\n    const {params} = context;\r\n    const productId = params.pid;\r\n\r\n    const data = await getData();\r\n    \r\n\r\n    const product = data.products.find(product=>product.id === productId);\r\n    \r\n    if(!product){\r\n        return {notFound: true}\r\n    }\r\n    \r\n    return {\r\n        props:{\r\n            loadedProduct : product\r\n        }\r\n    }\r\n}\r\n\r\nexport async function getStaticPaths(){\r\n\r\n    const data =await  getData();\r\n    const ids = data.products.map(product=>product.id);\r\n\r\n    const pathsWithParams = ids.map(id=>({params:{pid:id}}));\r\n    return {\r\n        paths: pathsWithParams,\r\n        fallback:true,\r\n\r\n    };\r\n}\r\n\r\nexport default ProductDetailPage;"]},"metadata":{},"sourceType":"module"}